{
  "metadata": {
    "prompt_id": "00000015",
    "row_id": 15,
    "seed_ids": [
      "2500",
      "1736",
      "1898"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given two strings `text1` and `text2`, both consisting of lowercase English letters. Your task is to find the length of the longest **common subsequence** (LCS) between the two strings. Additionally, you are provided with a **mask** string `mask`, where each character is either `'0'` or `'1'`. You need to modify the LCS such that each character in the LCS is replaced by the corresponding character in `mask` if the corresponding position in `mask` is `'1'`, and kept as is if the corresponding position in `mask` is `'0'`. Return the modified LCS as a string.\n\n**Note**: A **common subsequence** is a sequence that can be derived from both strings by deleting some characters without changing the order of the remaining characters.",
  "solution_code": "def longest_common_subsequence_with_mask(text1, text2, mask):\n    \"\"\"\n    Finds the longest common subsequence between text1 and text2, then modifies it\n    based on the mask provided.\n    \"\"\"\n    m, n = len(text1), len(text2)\n    dp = [[0] * (n + 1) for _ in range(m + 1)]\n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if text1[i - 1] == text2[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n    \n    lcs = [''] * dp[-1][-1]\n    i, j = m, n\n    while i > 0 and j > 0:\n        if text1[i - 1] == text2[j - 1]:\n            lcs[dp[i][j] - 1] = text1[i - 1]\n            i -= 1\n            j -= 1\n        elif dp[i - 1][j] > dp[i][j - 1]:\n            i -= 1\n        else:\n            j -= 1\n    \n    modified_lcs = ''\n    mask_idx = 0\n    for char in lcs:\n        if mask_idx < len(mask):\n            modified_lcs += mask[mask_idx] if mask[mask_idx] == '1' else char\n        else:\n            modified_lcs += char\n        mask_idx += 1\n    return modified_lcs",
  "test_code": "def test_longest_common_subsequence_with_mask():\n    assert longest_common_subsequence_with_mask(\"abcde\", \"ace\", \"01010\") == \"ace\"\n    assert longest_common_subsequence_with_mask(\"abc\", \"abc\", \"000\") == \"abc\"\n    assert longest_common_subsequence_with_mask(\"abc\", \"def\", \"11\") == \"bc\"\n    assert longest_common_subsequence_with_mask(\"abcd\", \"ace\", \"0001\") == \"d\"\n\ndef test_longest_common_subsequence_with_mask_empty_mask():\n    assert longest_common_subsequence_with_mask(\"abc\", \"abc\", \"\") == \"abc\"",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}