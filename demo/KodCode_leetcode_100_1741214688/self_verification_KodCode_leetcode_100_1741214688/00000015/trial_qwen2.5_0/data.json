{
  "metadata": {
    "prompt_id": "00000015",
    "row_id": 15,
    "seed_ids": [
      "2500",
      "1736",
      "1898"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given two strings `text1` and `text2`, both consisting of lowercase English letters. Your task is to find the length of the longest **common subsequence** (LCS) between the two strings. Additionally, you are provided with a **mask** string `mask`, where each character is either `'0'` or `'1'`. You need to modify the LCS such that each character in the LCS is replaced by the corresponding character in `mask` if the corresponding position in `mask` is `'1'`, and kept as is if the corresponding position in `mask` is `'0'`. Return the modified LCS as a string.\n\n**Note**: A **common subsequence** is a sequence that can be derived from both strings by deleting some characters without changing the order of the remaining characters.",
  "solution_code": "def longest_common_subsequence(text1: str, text2: str, mask: str) -> str:\n    \"\"\"\n    Finds the longest common subsequence (LCS) between text1 and text2 and then modifies it based on the mask.\n    \"\"\"\n    m, n = len(text1), len(text2)\n    dp = [[\"\" for _ in range(n + 1)] for _ in range(m + 1)]\n    \n    for i in range(1, m + 1):\n        for j in range(1, n + 1):\n            if text1[i - 1] == text2[j - 1] and mask[i - 1] == '1':\n                dp[i][j] = dp[i - 1][j - 1] + text1[i - 1]\n            else:\n                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1], key=len)\n    \n    return max(dp[-1], key=len)\n\n# Example usage:\n# text1 = \"abcde\"\n# text2 = \"ace\"\n# mask = \"10101\"\n# result = longest_common_subsequence(text1, text2, mask)  # result should be \"ace\"",
  "test_code": "from solution import longest_common_subsequence\n\ndef test_lcs_with_mask():\n    assert longest_common_subsequence(\"abcde\", \"ace\", \"10101\") == \"ace\"\n    assert longest_common_subsequence(\"abcdeg\", \"aceg\", \"010101\") == \"aceg\"\n    assert longest_common_subsequence(\"abcd\", \"abcd\", \"1111\") == \"abcd\"\n    assert longest_common_subsequence(\"abc\", \"def\", \"001\") == \"c\"\n    assert longest_common_subsequence(\"abcde\", \"ace\", \"00101\") == \"\"\n\ndef test_lcs_without_mask():\n    assert longest_common_subsequence(\"abcde\", \"ace\", \"00000\") == \"\"\n    assert longest_common_subsequence(\"abcde\", \"ace\", \"11111\") == \"ace\"",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}