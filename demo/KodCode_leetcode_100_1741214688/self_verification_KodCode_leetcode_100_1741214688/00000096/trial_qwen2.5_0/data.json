{
  "metadata": {
    "prompt_id": "00000096",
    "row_id": 96,
    "seed_ids": [
      "2485",
      "2345",
      "796"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a list of `n` unique integers, determine if there exists a pair of integers in the list whose sum is equal to a given target integer `k`. If such a pair exists, return the indices of the two integers (0-indexed) in any order. If no such pair exists, return an empty list. Note that the same integer cannot be used twice.",
  "solution_code": "def find_pair_indices(nums, k):\n    \"\"\"\n    Determine if there exists a pair of integers in the list whose sum is equal to the target k.\n    If such a pair exists, return the indices of the two integers; otherwise, return an empty list.\n    \"\"\"\n    num_to_index = {}\n    for i, num in enumerate(nums):\n        complement = k - num\n        if complement in num_to_index:\n            return [num_to_index[complement], i]\n        num_to_index[num] = i\n    return []",
  "test_code": "def test_find_pair_indices():\n    assert find_pair_indices([1, 3, 5, 7, 9], 12) == [1, 3] or [3, 1]\n    assert find_pair_indices([2, 4, 6, 8, 10], 15) == [2, 3] or [3, 2]\n    assert find_pair_indices([5, 10, 3, 7], 13) == [1, 3] or [3, 1]\n    assert find_pair_indices([1, 2, 3, 4], 8) == []\n    assert find_pair_indices([0, 1, 4, 9, 13, 18], 15) == [0, 3] or [3, 0]\n    assert find_pair_indices([11, 22, 33, 44], 66) == [0, 2] or [2, 0]\n\ndef test_find_pair_indices_negative():\n    assert find_pair_indices([1, 2, -3, -2], -1) == [1, 2] or [2, 1]\n    assert find_pair_indices([-5, 1, 2, -3, 4], 2) == [2, 3] or [3, 2]\n    assert find_pair_indices([-14, 5, 8, 2, 7, 5], 10) == [1, 5] or [5, 1]\n    assert find_pair_indices([-5, -1, 0, 1, 3, 9], 4) == [3, 4] or [4, 3]",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}