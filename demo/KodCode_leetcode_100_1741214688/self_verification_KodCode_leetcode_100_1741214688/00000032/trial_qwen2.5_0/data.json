{
  "metadata": {
    "prompt_id": "00000032",
    "row_id": 32,
    "seed_ids": [
      "1685",
      "499",
      "2501"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given an integer array `nums` sorted in **non-decreasing** order. Define a function `f(x)` for each element `x` in `nums` such that `f(x)` is the number of elements in `nums` that are strictly less than `x`. Build and return an integer array `result` with the same length as `nums` such that `result[i]` is equal to the summation of `f(nums[i])` for all `i` in the array. In other words, `result[i]` is equal to `sum(f(nums[i]))` where `0 <= j < nums.length` and `j != i` (0-indexed).",
  "solution_code": "def f(x, nums):\n    \"\"\"\n    Returns the number of elements in nums that are strictly less than x.\n    \"\"\"\n    return len([num for num in nums if num < x])\n\ndef result_array(nums):\n    \"\"\"\n    For each element in nums, compute the number of elements strictly less than it,\n    then sum these values across all elements in the array.\n    \"\"\"\n    n = len(nums)\n    result = [0] * n\n    for i in range(n):\n        result[i] = sum(f(nums[i], nums[:i]) + f(nums[i], nums[i+1:]))\n    return result",
  "test_code": "from solution import result_array\n\ndef test_result_array_empty():\n    assert result_array([]) == []\n\ndef test_result_array_single_element():\n    assert result_array([1]) == [0]\n\ndef test_result_array_constant_elements():\n    assert result_array([1, 1, 1]) == [0, 0, 0]\n\ndef test_result_array_increasing_elements():\n    assert result_array([1, 2, 3, 4]) == [0, 1, 3, 6]\n\ndef test_result_array_decreasing_elements():\n    assert result_array([4, 3, 2, 1]) == [6, 3, 1, 0]\n\ndef test_result_array_mixed_elements():\n    assert result_array([2, 3, 1, 4, 5]) == [0, 1, 0, 3, 6]",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}