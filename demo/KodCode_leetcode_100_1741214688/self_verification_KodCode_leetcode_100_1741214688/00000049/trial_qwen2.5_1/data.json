{
  "metadata": {
    "prompt_id": "00000049",
    "row_id": 49,
    "seed_ids": [
      "1848",
      "1455",
      "1601"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given an integer array `nums` and a target integer `target`, find the **shortest contiguous subarray** in `nums` such that the sum of the elements in the subarray is equal to or greater than `target`. If no such subarray exists, return `0`. A **contiguous subarray** is a subarray with at least two elements, and the **sum** of its elements is the sum of the corresponding elements in `nums`.",
  "solution_code": "def shortest_subarray_with_target(nums, target):\n    \"\"\"\n    Returns the length of the shortest contiguous subarray in nums\n    such that the sum of the elements in the subarray is equal to or greater than target.\n    If no such subarray exists, return 0.\n    \"\"\"\n    n = len(nums)\n    if n < 2:\n        return 0\n    \n    min_length = float('inf')\n    current_sum = 0\n    start = 0\n    \n    for end in range(n):\n        current_sum += nums[end]\n        \n        while current_sum >= target:\n            min_length = min(min_length, end - start + 1)\n            current_sum -= nums[start]\n            start += 1\n            \n    return min_length if min_length != float('inf') else 0",
  "test_code": "from solution import shortest_subarray_with_target\n\ndef test_shortest_subarray_with_target():\n    assert shortest_subarray_with_target([2, 3, 1, 2, 4, 3], 7) == 2\n    assert shortest_subarray_with_target([1, 4, 4], 4) == 1\n    assert shortest_subarray_with_target([2, 3, 1, 2, 4, 3], 11) == 3\n    assert shortest_subarray_with_target([1, 1, 1, 1, 1, 1, 1, 1], 11) == 0\n    assert shortest_subarray_with_target([1, 2, 3, 4, 5], 15) == 5\n    assert shortest_subarray_with_target([10, 2, -2, -20, 10], -10) == 3\n    assert shortest_subarray_with_target([1], 2) == 0\n    assert shortest_subarray_with_target([5, 6], 11) == 2\n\ndef test_cases_with_small_arrays():\n    assert shortest_subarray_with_target([2, 3], 5) == 2\n    assert shortest_subarray_with_target([1], 2) == 0\n    assert shortest_subarray_with_target([], 2) == 0",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}