{
  "metadata": {
    "prompt_id": "00000061",
    "row_id": 61,
    "seed_ids": [
      "294",
      "2562",
      "1881"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a binary string `s` consisting only of `0`s and `1`s. A **substring** of `s` is called **good** if it does not contain more than one `0`. You are also given an integer `k`. Your task is to find the **maximum** number of **good** substrings that can be obtained by rearranging the characters of `s` and then splitting the string into at most `k` non-empty substrings. Return the maximum number of good substrings you can obtain.\n\nFor example, if `s = \"1001010011\"` and `k = 3`, one possible way to split `s` into good substrings is `\"10010\"`, `\"100\"`, and `\"11\"`, which gives a total of 3 good substrings.",
  "solution_code": "def max_good_substrings(s, k):\n    \"\"\"\n    Returns the maximum number of good substrings that can be obtained by rearranging\n    the characters of s and then splitting the string into at most k non-empty substrings.\n    \"\"\"\n    ones, zeros = 0, 0\n    for char in s:\n        if char == '1':\n            ones += 1\n        else:\n            zeros += 1\n    \n    if zeros <= k:\n        return zeros\n    else:\n        # Split the string at most k times\n        splits = 1\n        zeros_in_chunk = 0\n        for i in range(len(s) - 1):\n            if s[i] == '0':\n                zeros_in_chunk += 1\n            if zeros_in_chunk > k:\n                splits += 1\n                zeros_in_chunk = 1  # Reset for the next chunk\n            if splits > k:\n                break\n        \n        return min(zeros, splits)",
  "test_code": "import pytest\n\ndef test_max_good_substrings():\n    assert max_good_substrings(\"1001010011\", 3) == 3\n    assert max_good_substrings(\"100011000\", 1) == 2\n    assert max_good_substrings(\"101010101\", 2) == 4\n    assert max_good_substrings(\"0001\", 3) == 1\n    assert max_good_substrings(\"111100000\", 5) == 5\n    assert max_good_substrings(\"010101010\", 8) == 8",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}