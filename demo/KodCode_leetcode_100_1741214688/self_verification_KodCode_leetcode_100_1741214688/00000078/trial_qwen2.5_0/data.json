{
  "metadata": {
    "prompt_id": "00000078",
    "row_id": 78,
    "seed_ids": [
      "808",
      "1671",
      "1317"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a binary string `s`. A **substring** of `s` is called **good** if it does not contain any leading zeros and has an even length. Your task is to count the number of **good substrings** in `s`.\n\nFor example, given the string `s = \"1001010\"`, the good substrings are `\"10\"`, `\"010\"`, and `\"010\"`. Therefore, the answer is `3`.\n\nWrite a function `countGoodSubstrings(s: str) -> int` that returns the number of good substrings in the binary string `s`.\n\n**Constraints**:\n- `1 <= len(s) <= 1000`\n- `s` consists only of `0`s and `1`s.",
  "solution_code": "def countGoodSubstrings(s: str) -> int:\n    \"\"\"\n    Counts the number of good substrings in the binary string `s`.\n    A good substring does not contain leading zeros and has an even length.\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 1):\n        # Check if the substring of length 2 starting at position i is a good substring\n        if len(s[i:i+2]) == 2 and s[i] != '0' and s[i+1] != '0':\n            count += 1\n    return count",
  "test_code": "from solution import countGoodSubstrings\n\ndef test_countGoodSubstrings():\n    assert countGoodSubstrings(\"1001010\") == 3\n    assert countGoodSubstrings(\"10\") == 0\n    assert countGoodSubstrings(\"1101101100\") == 7\n    assert countGoodSubstrings(\"0000\") == 0\n    assert countGoodSubstrings(\"1111111111\") == 0\n    assert countGoodSubstrings(\"10101010\") == 4\n    assert countGoodSubstrings(\"1010101\") == 2\n\nif __name__ == \"__main__\":\n    import pytest\n    pytest.main()",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}