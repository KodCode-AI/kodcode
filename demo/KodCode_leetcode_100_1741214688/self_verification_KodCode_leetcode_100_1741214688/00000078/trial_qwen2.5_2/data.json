{
  "metadata": {
    "prompt_id": "00000078",
    "row_id": 78,
    "seed_ids": [
      "808",
      "1671",
      "1317"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a binary string `s`. A **substring** of `s` is called **good** if it does not contain any leading zeros and has an even length. Your task is to count the number of **good substrings** in `s`.\n\nFor example, given the string `s = \"1001010\"`, the good substrings are `\"10\"`, `\"010\"`, and `\"010\"`. Therefore, the answer is `3`.\n\nWrite a function `countGoodSubstrings(s: str) -> int` that returns the number of good substrings in the binary string `s`.\n\n**Constraints**:\n- `1 <= len(s) <= 1000`\n- `s` consists only of `0`s and `1`s.",
  "solution_code": "def count_good_substrings(s: str) -> int:\n    \"\"\"\n    Counts the number of 'good' substrings in the given binary string 's'.\n    A 'good' substring has no leading zeros and has an even length.\n    \"\"\"\n    count = 0\n    n = len(s)\n    for i in range(n):\n        # Ensure substring starts with 1\n        if s[i] == '1':\n            for j in range(i + 1, n, 2):\n                if j + 1 < n and s[j+1] == '1':\n                    count += 1\n                else:\n                    break\n    return count",
  "test_code": "import pytest\n\ndef test_count_good_substrings():\n    assert count_good_substrings(\"1001010\") == 3\n    assert count_good_substrings(\"1100011\") == 4\n    assert count_good_substrings(\"0000\") == 0\n    assert count_good_substrings(\"1111\") == 1\n    assert count_good_substrings(\"10101010\") == 8",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}