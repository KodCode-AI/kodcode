{
  "metadata": {
    "prompt_id": "00000035",
    "row_id": 35,
    "seed_ids": [
      "987",
      "1753",
      "11"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given an integer array `nums` of length `n`, you are asked to perform the following operation exactly `k` times: choose an index `i` (0-indexed) from the array and increment `nums[i]` by 1. After performing these operations, find the maximum possible **GCD** (Greatest Common Divisor) of the array `nums`.\n\nReturn the maximum GCD you can achieve.",
  "solution_code": "import math\nfrom typing import List\n\ndef maximize_gcd(nums: List[int], k: int) -> int:\n    \"\"\"\n    Returns the maximum possible GCD of the array nums after performing exactly k operations.\n    \"\"\"\n    max_val = max(nums)\n    min_val = min(nums)\n    possible_gcds = set()\n    \n    for i in range(min_val, max_val // 2 + 1):\n        if max_val % i == 0:\n            possible_gcds.add(i)\n    \n    for gcd in possible_gcds:\n        if all((num + (k * (num % gcd == 0))) % gcd == 0 for num in nums):\n            return gcd\n    \n    return 1",
  "test_code": "def test_maximize_gcd():\n    assert maximize_gcd([2, 3, 6], 1) == 4\n    assert maximize_gcd([3, 9, 6], 2) == 3\n    assert maximize_gcd([3, 9, 6], 3) == 9\n    assert maximize_gcd([2, 4, 6, 8], 10) == 2\n    assert maximize_gcd([10, 10, 10, 10], 5) == 10\n    assert maximize_gcd([1, 3, 5, 7], 2) == 1",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}