{
  "metadata": {
    "prompt_id": "00000011",
    "row_id": 11,
    "seed_ids": [
      "1427",
      "1300",
      "174"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a matrix `grid` of size `m x n` containing non-negative integers, and a target value `target`, you need to determine if there exists a path from the top-left corner to the bottom-right corner such that the sum of the values along the path is exactly `target`. You can only move rightward or downward at any point in time. If such a path exists, return `true`; otherwise, return `false`.",
  "solution_code": "def has_path_with_target(grid, target):\n    \"\"\"\n    Determines if there exists a path from the top-left corner to the bottom-right corner\n    such that the sum of the values along the path is exactly target.\n    \"\"\"\n    m, n = len(grid), len(grid[0])\n    dp = [[False] * n for _ in range(m)]\n    dp[0][0] = grid[0][0] == target\n    \n    for i in range(1, m):\n        dp[i][0] = dp[i-1][0] and grid[i][0] == target - grid[i-1][0]\n    \n    for j in range(1, n):\n        dp[0][j] = dp[0][j-1] and grid[0][j] == target - grid[0][j-1]\n    \n    for i in range(1, m):\n        for j in range(1, n):\n            dp[i][j] = (dp[i-1][j] and grid[i][j] == target - grid[i-1][j]) or \\\n                       (dp[i][j-1] and grid[i][j] == target - grid[i][j-1])\n    \n    return dp[-1][-1]",
  "test_code": "def test_has_path_with_target():\n    grid = [[1, 3, 2], [1, 5, 1], [4, 2, 1]]\n    target = 9\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_2():\n    grid = [[1, 1, 1], [1, 1, 1], [1, 1, 1]]\n    target = 2\n    assert has_path_with_target(grid, target) == False\n\ndef test_has_path_with_target_3():\n    grid = [[1, 1, 1], [1, 1, 1], [1, 1, 1]]\n    target = 10\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_4():\n    grid = [[7], [3], [1]]\n    target = 10\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_5():\n    grid = [[7, 3, 5], [1, 8, 4], [8, 2, 1]]\n    target = 11\n    assert has_path_with_target(grid, target) == False\n\ndef test_has_path_with_target_6():\n    grid = [[0], [0], [0]]\n    target = 0\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_7():\n    grid = [[0, 0], [0, 0]]\n    target = 2\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_8():\n    grid = [[0, 0], [0, 1]]\n    target = 2\n    assert has_path_with_target(grid, target) == True\n\ndef test_has_path_with_target_9():\n    grid = [[0, 0], [0, 1]]\n    target = 3\n    assert has_path_with_target(grid, target) == False",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}