{
  "metadata": {
    "prompt_id": "00000050",
    "row_id": 50,
    "seed_ids": [
      "1057",
      "1399",
      "157"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given an integer `n`, you are asked to find the number of ways to represent `n` as a sum of consecutive positive integers. For example, `5` can be represented as `2 + 3`, which is one way. Return the total number of ways to represent `n` in this manner.\n\nNote: Consecutive positive integers are those where each integer is one more than the previous one, such as `1, 2, 3, ...`.",
  "solution_code": "def count_ways(n: int) -> int:\n    \"\"\"\n    Returns the number of ways to represent n as a sum of consecutive positive integers.\n    \"\"\"\n    ways = 0\n    start = 1\n    while start * (start + 1) < 2 * n:\n        end = int((-start + (start * (start + 1) - 2 * n) ** 0.5) / 2)\n        if start * (start + 1) // 2 + end * (end + 1) // 2 == n:\n            ways += 1\n        start += 1\n    return ways",
  "test_code": "def test_count_ways():\n    assert count_ways(5) == 2  # Because 5 can be represented as 2 + 3 or 5 itself\n    assert count_ways(9) == 3  # Because 9 can be represented as 4 + 5, 2 + 3 + 4, or 9 itself\n    assert count_ways(15) == 4  # Because 15 can be represented as 1 + 2 + 3 + 4 + 5, 7 + 8, 4 + 5 + 6, or 15 itself\n    assert count_ways(1) == 1  # 1 can only be represented as 1\n    assert count_ways(10) == 2  # Because 10 can be represented as 1 + 2 + 3 + 4 or 5 + 5",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}