{
  "metadata": {
    "prompt_id": "00000002",
    "row_id": 2,
    "seed_ids": [
      "2012",
      "839",
      "756"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a string `s` consisting of lowercase English letters. A **substring** of `s` is considered **beautiful** if it contains an even number of distinct letters and the sum of the ASCII values of all characters in the substring is divisible by 3. Return the number of **beautiful substrings** in `s`.\n\nFor example, in the string `\"abcabb\"`, `\"a\"`, `\"bb\"`, and `\"abb\"` are beautiful substrings.",
  "solution_code": "def count_beautiful_substrings(s: str) -> int:\n    \"\"\"\n    Returns the number of beautiful substrings in the given string s.\n    A substring is considered beautiful if it has an even number of distinct letters\n    and the sum of its ASCII values is divisible by 3.\n    \"\"\"\n    def is_beautiful(subs: str) -> bool:\n        distinct_chars = set(subs)\n        ascii_sum = sum(ord(c) for c in subs)\n        return len(distinct_chars) % 2 == 0 and ascii_sum % 3 == 0\n\n    count = 0\n    for i in range(len(s)):\n        for j in range(i + 1, len(s) + 1):\n            if is_beautiful(s[i:j]):\n                count += 1\n    return count",
  "test_code": "import pytest\n\ndef test_count_beautiful_substrings():\n    assert count_beautiful_substrings(\"abcabb\") == 3  # \"a\", \"bb\", \"abb\" are beautiful\n    assert count_beautiful_substrings(\"zzzz\") == 3  # \"z\", \"z\", \"zzz\" are beautiful\n    assert count_beautiful_substrings(\"abcd\") == 0  # No beautiful substrings\n    assert count_beautiful_substrings(\"xyzzxyzz\") == 6  # \"z\", \"z\", \"zzz\", \"xy\", \"yz\", \"zzz\" are beautiful\n    assert count_beautiful_substrings(\"abcdabcd\") == 6  # \"a\", \"b\", \"c\", \"d\", \"ab\", \"bc\" are beautiful",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}