{
  "metadata": {
    "prompt_id": "00000002",
    "row_id": 2,
    "seed_ids": [
      "2012",
      "839",
      "756"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a string `s` consisting of lowercase English letters. A **substring** of `s` is considered **beautiful** if it contains an even number of distinct letters and the sum of the ASCII values of all characters in the substring is divisible by 3. Return the number of **beautiful substrings** in `s`.\n\nFor example, in the string `\"abcabb\"`, `\"a\"`, `\"bb\"`, and `\"abb\"` are beautiful substrings.",
  "solution_code": "def count_beautiful_substrings(s: str) -> int:\n    \"\"\"\n    Returns the number of beautiful substrings in the given string.\n    A substring is beautiful if it has an even number of distinct letters and the sum of ASCII values is divisible by 3.\n    \"\"\"\n    n = len(s)\n    beautiful_count = 0\n    \n    # Iterate over all possible substrings\n    for start in range(n):\n        char_count = [0] * 26\n        ascii_sum = 0\n        distinct_count = 0\n        for end in range(start, n):\n            index = ord(s[end]) - ord('a')\n            char_count[index] += 1\n            if char_count[index] == 1: \n                distinct_count += 1\n                ascii_sum += ord(s[end])\n            elif char_count[index] == 2: \n                ascii_sum -= ord(s[end])\n            if distinct_count % 2 == 0 and ascii_sum % 3 == 0:\n                beautiful_count += 1\n                \n    return beautiful_count",
  "test_code": "from solution import count_beautiful_substrings\n\ndef test_count_beautiful_substrings():\n    assert count_beautiful_substrings(\"abcabb\") == 5\n    assert count_beautiful_substrings(\"zzzz\") == 2\n    assert count_beautiful_substrings(\"aabbcc\") == 6\n    assert count_beautiful_substrings(\"abc\") == 0\n    assert count_beautiful_substrings(\"aaa\") == 0\n    assert count_beautiful_substrings(\"aabbaa\") == 6",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}