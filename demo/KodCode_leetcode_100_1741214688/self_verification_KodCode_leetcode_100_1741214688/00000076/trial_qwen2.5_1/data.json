{
  "metadata": {
    "prompt_id": "00000076",
    "row_id": 76,
    "seed_ids": [
      "2180",
      "1025",
      "668"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a positive integer `n`, return the number of integers `x` in the range `[1, n]` (inclusive) such that the sum of the digits of `x` is a **prime number**. A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.",
  "solution_code": "def is_prime(num):\n    \"\"\"Check if a number is prime.\"\"\"\n    if num <= 1:\n        return False\n    for i in range(2, int(num**0.5) + 1):\n        if num % i == 0:\n            return False\n    return True\n\ndef digit_sum(n):\n    \"\"\"Calculate the sum of the digits of n.\"\"\"\n    return sum(int(digit) for digit in str(n))\n\ndef count_prime_digit_sums(n):\n    \"\"\"\n    Count the number of integers x in the range [1, n] such that the sum of the digits of x is a prime number.\n    \"\"\"\n    return sum(is_prime(digit_sum(x)) for x in range(1, n + 1))",
  "test_code": "from solution import is_prime, digit_sum, count_prime_digit_sums\n\ndef test_is_prime():\n    assert is_prime(2) == True\n    assert is_prime(3) == True\n    assert is_prime(4) == False\n    assert is_prime(5) == True\n    assert is_prime(6) == False\n    assert is_prime(29) == True\n    assert is_prime(25) == False\n\ndef test_digit_sum():\n    assert digit_sum(123) == 6\n    assert digit_sum(456) == 15\n    assert digit_sum(789) == 24\n\ndef test_count_prime_digit_sums():\n    assert count_prime_digit_sums(5) == 2  # 2, 3\n    assert count_prime_digit_sums(10) == 4  # 2, 3, 5, 7\n    assert count_prime_digit_sums(15) == 6  # 2, 3, 5, 7, 11, 13\n    assert count_prime_digit_sums(22) == 8  # 2, 3, 5, 7, 11, 13, 17, 19",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}