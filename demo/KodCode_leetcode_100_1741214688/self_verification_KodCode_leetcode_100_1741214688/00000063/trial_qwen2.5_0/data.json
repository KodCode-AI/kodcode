{
  "metadata": {
    "prompt_id": "00000063",
    "row_id": 63,
    "seed_ids": [
      "2449",
      "1456",
      "1711"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a binary string `s` and an integer `k`, return the minimum number of operations required to make exactly `k` characters in the string '1'. In one operation, you can choose any substring of the string and flip all the characters in it (i.e., change '0' to '1' and '1' to '0'). Two strings are considered to be **similar** if they have the same number of '1's. The test cases are generated such that the binary string `s` can always be made to have exactly `k` '1's.",
  "solution_code": "def min_operations_to_k_ones(s, k):\n    \"\"\"\n    Given a binary string s and an integer k, return the minimum number of operations\n    required to make exactly k characters in the string '1'.\n    \"\"\"\n    n = len(s)\n    prefix_sum = [0]\n    for char in s:\n        prefix_sum.append(prefix_sum[-1] + (char == '1'))\n    \n    min_ops = float('inf')\n    for left in range(n + 1):\n        right = max(0, (k * 2 - prefix_sum[left] - (n - left)))\n        ops = max(0, n - right) + left - prefix_sum[left]\n        min_ops = min(min_ops, ops)\n    \n    return min_ops",
  "test_code": "def test_min_operations_to_k_ones():\n    assert min_operations_to_k_ones(\"0001000\", 3) == 3\n    assert min_operations_to_k_ones(\"10000000000\", 3) == 3\n    assert min_operations_to_k_ones(\"111\", 1) == 1\n    assert min_operations_to_k_ones(\"0000000000\", 1) == 9\n    assert min_operations_to_k_ones(\"0011001100\", 5) == 1\n    assert min_operations_to_k_ones(\"0101010101\", 5) == 5\n    assert min_operations_to_k_ones(\"1111111111\", 10) == 0",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}