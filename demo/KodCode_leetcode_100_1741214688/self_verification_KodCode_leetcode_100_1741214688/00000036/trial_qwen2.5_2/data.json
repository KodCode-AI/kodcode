{
  "metadata": {
    "prompt_id": "00000036",
    "row_id": 36,
    "seed_ids": [
      "994",
      "746",
      "1397"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a binary string `s` (a string consisting only of '0's and '1's), you need to perform a series of operations to make the string alternating. An alternating string is one where no two adjacent characters are the same. You can perform the following operation any number of times: choose any index `i` (1-indexed) and flip the character at `s[i]` (change '0' to '1' or '1' to '0'). \n\nReturn the minimum number of operations required to make the string alternating. If it is impossible to make the string alternating, return `-1`.",
  "solution_code": "def min_flips_to_alternate(s: str) -> int:\n    \"\"\"\n    Returns the minimum number of operations required to make the binary string 's' alternating.\n    \"\"\"\n    len_s = len(s)\n    \n    # Count the number of flips to make the string start with '0' and with '1'\n    flips_starting_with_0 = flips_starting_with_1 = 0\n    \n    for i, char in enumerate(s):\n        expected_char = '0' if i % 2 == 0 else '1'\n        if char != expected_char:\n            flips_starting_with_0 += 1\n    \n    expected_char = '1' if len_s % 2 == 0 else '0'\n    for i, char in enumerate(s):\n        if char != expected_char:\n            flips_starting_with_1 += 1\n    \n    # Since we count the flips for starting with '1', subtract them from the total length to get the flips for starting with '0'\n    result = min(flips_starting_with_0, len_s - flips_starting_with_1)\n    \n    # Check if the string is already alternating\n    if len_s == result:\n        return result\n    \n    return -1 if result == len_s else result",
  "test_code": "def test_min_flips_to_alternate():\n    assert min_flips_to_alternate(\"00110\") == 2, \"Test case 1 failed\"\n    assert min_flips_to_alternate(\"10\") == 1, \"Test case 2 failed\"\n    assert min_flips_to_alternate(\"1111\") == -1, \"Test case 3 failed\"\n    assert min_flips_to_alternate(\"0101010\") == 0, \"Test case 4 failed\"\n    assert min_flips_to_alternate(\"111000\") == 3, \"Test case 5 failed\"\n    assert min_flips_to_alternate(\"00011110\") == 4, \"Test case 6 failed\"\n    print(\"All test cases passed!\")\n\n# Call the test function to run all the tests\ntest_min_flips_to_alternate()",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}