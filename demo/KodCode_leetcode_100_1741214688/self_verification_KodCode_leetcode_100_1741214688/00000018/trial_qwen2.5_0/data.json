{
  "metadata": {
    "prompt_id": "00000018",
    "row_id": 18,
    "seed_ids": [
      "2482",
      "2440",
      "1887"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a **0-indexed** integer array `nums` of length `n`. You are allowed to perform the following operation on the array any number of times:\n\n- Choose an index `i` such that `0 <= i < n` and set `nums[i]` to `0`.\n\nYou are also given a **0-indexed** array `costs` of the same length, where `costs[i]` represents the cost of setting `nums[i]` to `0`. \n\nYour goal is to make all elements in `nums` equal to `0` with the minimum possible cost. \n\nReturn _the minimum cost to achieve this_.",
  "solution_code": "def min_cost_to_set(nums, costs):\n    \"\"\"\n    Returns the minimum cost to set all elements in nums to 0.\n    \"\"\"\n    min_cost = float('inf')\n    for i in range(len(nums)):\n        current_cost = sum(costs[j] for j in range(len(nums)) if nums[j] == nums[i])\n        min_cost = min(min_cost, current_cost)\n    return min_cost",
  "test_code": "def test_min_cost_to_set():\n    assert min_cost_to_set([1, 2, 3], [10, 15, 20]) == 10\n    assert min_cost_to_set([2, 2, 2, 2, 2], [4, 2, 8, 1, 3]) == 5\n    assert min_cost_to_set([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]) == 30\n    assert min_cost_to_set([5, 5, 5, 5], [1, 1, 1, 1]) == 4\n    assert min_cost_to_set([10, 20, 30, 40, 50], [5, 3, 6, 8, 2]) == 5\n\ndef test_min_cost_to_set_with_zeros():\n    assert min_cost_to_set([0, 0, 0, 0, 0], [1, 2, 3, 4, 5]) == 0",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results0.jsonl"
}