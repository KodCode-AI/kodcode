{
  "metadata": {
    "prompt_id": "00000026",
    "row_id": 26,
    "seed_ids": [
      "2031",
      "335",
      "1814"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given an array `nums` consisting of positive integers. A **triangle** is valid if the sum of its two shorter sides is greater than the length of the longest side. Return the number of **unique** triangles that can be formed from the elements of `nums`. Since the answer may be very large, return it **modulo** `109 + 7`. Two triangles are considered **unique** if at least one of their sides has different lengths.",
  "solution_code": "def count_triangles(nums):\n    \"\"\"\n    Returns the number of unique triangles that can be formed from the elements of nums\n    modulo 10^9 + 7.\n    \"\"\"\n    mod = 10**9 + 7\n    nums.sort()\n    count = 0\n    n = len(nums)\n    \n    for i in range(n-2):\n        k = i + 2\n        for j in range(i+1, n-1):\n            while k < n and nums[i] + nums[j] > nums[k]:\n                k += 1\n            count += max(0, k - j - 1)\n    \n    return count % mod",
  "test_code": "from solution import count_triangles\n\ndef test_count_triangles():\n    assert count_triangles([2, 1, 3]) == 1\n    assert count_triangles([5, 8, 6, 10, 7, 12]) == 8\n    assert count_triangles([19, 18, 1, 7, 4, 15, 2, 12, 6, 10, 11, 14, 5, 16, 8, 13, 3, 9, 0]) == 33\n    assert count_triangles([1, 2, 3, 4, 5]) == 6\n    assert count_triangles([5, 5, 5, 5]) == 10\n    assert count_triangles([10, 21, 22, 100, 101, 102]) == 4",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}