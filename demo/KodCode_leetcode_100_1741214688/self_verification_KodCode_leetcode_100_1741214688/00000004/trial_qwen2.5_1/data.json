{
  "metadata": {
    "prompt_id": "00000004",
    "row_id": 4,
    "seed_ids": [
      "765",
      "2513",
      "1915"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a string `s` consisting of lowercase English letters, a **substring** of `s` is called a **balanced substring** if the number of distinct characters in it is exactly `k`. For a given integer `k`, return the number of balanced substrings in `s`.\n\nExample:\n```python\ns = \"abcabc\", k = 2\nOutput: 3\nExplanation: The balanced substrings are \"ab\", \"bc\", and \"ab\".\n```\n\nExample:\n```python\ns = \"aaabbbccc\", k = 3\nOutput: 1\nExplanation: The only balanced substring is \"aaabbbccc\".\n```",
  "solution_code": "def count_balanced_substrings(s, k):\n    \"\"\"\n    Returns the number of balanced substrings in s where each substring has exactly k distinct characters.\n    \"\"\"\n    from collections import Counter\n    count = 0\n    for i in range(len(s)):\n        for j in range(i + 1, len(s) + 1):\n            substring = s[i:j]\n            if len(Counter(substring)) == k:\n                count += 1\n    return count",
  "test_code": "import pytest\n\ndef test_count_balanced_substrings():\n    assert count_balanced_substrings(\"abcabc\", 2) == 3\n    assert count_balanced_substrings(\"aaabbbccc\", 3) == 1\n    assert count_balanced_substrings(\"abababab\", 2) == 8\n    assert count_balanced_substrings(\"xyzxyz\", 2) == 4\n    assert count_balanced_substrings(\"aaaa\", 1) == 4\n    assert count_balanced_substrings(\"bana\", 2) == 2\n    assert count_balanced_substrings(\"abcabc\", 4) == 0\n    assert count_balanced_substrings(\"a\", 1) == 1",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results1.jsonl"
}