{
  "metadata": {
    "prompt_id": "00000090",
    "row_id": 90,
    "seed_ids": [
      "2320",
      "2021",
      "647"
    ],
    "mode": "leetcode"
  },
  "instruction": "Given a string `s` consisting of lowercase English letters, a **substring** `t` of `s` is called **balanced** if the number of vowels (`a`, `e`, `i`, `o`, `u`) in `t` is equal to the number of consonants. Return the number of **balanced** substrings in `s`.",
  "solution_code": "def count_balanced_substrings(s: str) -> int:\n    \"\"\"\n    Returns the number of balanced substrings in the given string `s`.\n    A balanced substring has an equal number of vowels and consonants.\n    \"\"\"\n    counts = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}\n    max_balanced_substrings = 0\n    current_vowels = 0\n    current_consonants = 0\n\n    for char in s:\n        if char in counts:\n            current_vowels += 1\n            counts[char] += 1\n        else:\n            current_consonants += 1\n        \n        if current_vowels == current_consonants:\n            max_balanced_substrings += 1\n            current_vowels, current_consonants = 0, 0\n\n    return max_balanced_substrings",
  "test_code": "from solution import count_balanced_substrings\n\ndef test_count_balanced_substrings():\n    assert count_balanced_substrings('a') == 0\n    assert count_balanced_substrings('aabcbaabc') == 4\n    assert count_balanced_substrings('aa') == 1\n    assert count_balanced_substrings('beeeecessary') == 3\n    assert count_balanced_substrings('aebbcdeeeecba') == 6\n    assert count_balanced_substrings('abcd') == 0",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}