{
  "metadata": {
    "prompt_id": "00000074",
    "row_id": 74,
    "seed_ids": [
      "1721",
      "2418",
      "1704"
    ],
    "mode": "leetcode"
  },
  "instruction": "You are given a string `s` consisting of lowercase English letters. You need to determine the lexicographically smallest palindrome by swapping any two adjacent characters in the string at most once. Return the resulting palindrome string. If it's not possible to form a palindrome by swapping at most one pair of adjacent characters, return the original string.",
  "solution_code": "def form_smallest_palindrome(s: str) -> str:\n    \"\"\"\n    Returns the lexicographically smallest palindrome by swapping at most one pair of adjacent characters.\n    If it's not possible, returns the original string.\n    \"\"\"\n    s_list = list(s)\n    n = len(s)\n    for i in range(n // 2):\n        if s[i] != s[n - 1 - i]:\n            for j in range(i + 1, n - i):\n                if s[j] == s[n - 1 - i]:\n                    s_list[i], s_list[j] = s_list[j], s_list[i]\n                    return ''.join(s_list)\n            return s\n    return ''.join(s_list)",
  "test_code": "def test_form_smallest_palindrome():\n    assert form_smallest_palindrome(\"egcfe\") == \"efcfe\"\n    assert form_smallest_palindrome(\"abcd\") == \"abba\"\n    assert form_smallest_palindrome(\"seven\") == \"seven\"\n    assert form_smallest_palindrome(\"aabbcc\") == \"abcbbc\"\n    assert form_smallest_palindrome(\"bbabcb\") == \"babcbb\"\n    assert form_smallest_palindrome(\"bcb\") == \"bcb\"\n    assert form_smallest_palindrome(\"aa\") == \"aa\"\n    assert form_smallest_palindrome(\"xyz\") == \"xyz\"",
  "file_source": "KodCode_questions2sv_leetcode_100_1741214688_sanitized_prepared_results2.jsonl"
}