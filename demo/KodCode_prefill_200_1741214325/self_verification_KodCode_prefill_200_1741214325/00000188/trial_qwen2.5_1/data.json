{
  "metadata": {
    "prompt_id": "00000188",
    "row_id": 188,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to calculate the nth Fibonacci number using recursion.",
  "solution_code": "def fibonacci(n):\n    \"\"\"\n    Returns the nth Fibonacci number.\n    \n    Args:\n    n (int): The position in the Fibonacci sequence.\n    \n    Returns:\n    int: The nth Fibonacci number.\n    \"\"\"\n    if n <= 0:\n        raise ValueError(\"n must be a positive integer\")\n    elif n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)",
  "test_code": "from solution import fibonacci\n\ndef test_fibonacci_zero():\n    assert fibonacci(0) is None\n\ndef test_fibonacci_one():\n    assert fibonacci(1) == 0\n\ndef test_fibonacci_two():\n    assert fibonacci(2) == 1\n\ndef test_fibonacci_three():\n    assert fibonacci(3) == 1\n\ndef test_fibonacci_four():\n    assert fibonacci(4) == 2\n\ndef test_fibonacci_five():\n    assert fibonacci(5) == 3\n\ndef test_fibonacci_six():\n    assert fibonacci(6) == 5\n\ndef test_fibonacci_large_number():\n    assert fibonacci(10) == 34\n\ndef test_fibonacci_invalid_input():\n    try:\n        fibonacci(-1)\n    except ValueError as e:\n        assert str(e) == \"n must be a positive integer\"\n    else:\n        assert False, \"ValueError was expected\"",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}