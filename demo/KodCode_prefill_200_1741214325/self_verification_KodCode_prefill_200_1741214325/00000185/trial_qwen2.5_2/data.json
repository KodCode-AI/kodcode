{
  "metadata": {
    "prompt_id": "00000185",
    "row_id": 185,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to find the smallest number that is a multiple of both given integers. To solve this, create a helper function to calculate the greatest common divisor (GCD) of two numbers and then use this helper function to find the least common multiple (LCM) of two numbers.",
  "solution_code": "def gcd(a, b):\n    \"\"\"\n    Returns the greatest common divisor of a and b using the Euclidean algorithm.\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    \"\"\"\n    Returns the least common multiple of a and b.\n    \"\"\"\n    return a * b // gcd(a, b)\n\ndef smallest_multiple(a, b):\n    \"\"\"\n    Returns the smallest number that is a multiple of both a and b.\n    \"\"\"\n    return lcm(a, b)",
  "test_code": "``\nfrom solution import gcd, lcm, smallest_multiple\n\ndef test_gcd():\n    assert gcd(8, 12) == 4\n    assert gcd(17, 13) == 1\n\ndef test_lcm():\n    assert lcm(8, 12) == 24\n    assert lcm(17, 13) == 221\n\ndef test_smallest_multiple():\n    assert smallest_multiple(10, 15) == 30\n    assert smallest_multiple(7, 5) == 35\n    assert smallest_multiple(21, 6) == 42\n    assert smallest_multiple(15, 17) == 255\n\ndef test_smallest_multiple_with_gcd():\n    assert smallest_multiple(10, 15) == lcm(10, 15)",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results2.jsonl"
}