{
  "metadata": {
    "prompt_id": "00000066",
    "row_id": 66,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to find the maximum sum of a subarray within an array of integers. This is the famous Kadane's algorithm problem.",
  "solution_code": "def max_subarray_sum(arr):\n    \"\"\"\n    Finds the maximum sum of a contiguous subarray within a one-dimensional array of numbers.\n    \n    Args:\n    arr (list of int): The input array.\n    \n    Returns:\n    int: The maximum subarray sum.\n    \"\"\"\n    if not arr:\n        return 0\n    \n    max_current = max_global = arr[0]\n    for num in arr[1:]:\n        max_current = max(num, max_current + num)\n        if max_current > max_global:\n            max_global = max_current\n            \n    return max_global",
  "test_code": "``\nfrom solution import max_subarray_sum\n\ndef test_max_subarray_sum_positive():\n    assert max_subarray_sum([1, 2, 3, -2, 5]) == 9\n\ndef test_max_subarray_sum_single_element():\n    assert max_subarray_sum([5]) == 5\n\ndef test_max_subarray_sum_all_negative():\n    assert max_subarray_sum([-1, -2, -3, -4]) == -1\n\ndef test_max_subarray_sum\u6df7\u5408\u6b63\u8d1f\u6570():\n    assert max_subarray_sum([-2, 1, -3, 4, -1, 2, 1, -5, 4]) == 6\n\ndef test_max_subarray_sum_empty_array():\n    assert max_subarray_sum([]) == 0",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results0.jsonl"
}