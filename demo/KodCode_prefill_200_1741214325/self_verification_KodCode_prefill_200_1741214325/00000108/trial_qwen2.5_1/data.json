{
  "metadata": {
    "prompt_id": "00000108",
    "row_id": 108,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to count the occurrences of a substring in a given string. You should use only the built-in functions of python and no external libraries should be used.",
  "solution_code": "def count_substring_occurrences(string, substring):\n    \"\"\"\n    Counts the number of times the substring occurs in the given string.\n    \n    :param string: The main string to search in.\n    :param substring: The substring to search for.\n    :return: The number of times the substring occurs in the string.\n    \"\"\"\n    count = start = 0\n    while True:\n        start = string.find(substring, start) + 1\n        if start > 0:\n            count += 1\n        else:\n            break\n    return count",
  "test_code": "from solution import count_substring_occurrences\n\ndef test_count_substring_occurrences_empty():\n    assert count_substring_occurrences(\"\", \"a\") == 0\n\ndef test_count_substring_occurrences_single():\n    assert count_substring_occurrences(\"aaa\", \"a\") == 3\n    assert count_substring_occurrences(\"aaa\", \"aa\") == 1\n\ndef test_count_substring_occurrences_multiple():\n    assert count_substring_occurrences(\"abababab\", \"ab\") == 4\n    assert count_substring_occurrences(\"mississippi\", \"iss\") == 2\n\ndef test_count_substring_occurrences_overlap():\n    assert count_substring_occurrences(\"banana\", \"ana\") == 1\n    assert count_substring_occurrences(\"pineapple\", \"apple\") == 1\n    assert count_substring_occurrences(\"hellohellohello\", \"hello\") == 3\n\ndef test_count_substring_occurrences_not_found():\n    assert count_substring_occurrences(\"hello\", \"world\") == 0\n    assert count_substring_occurrences(\"abcd\", \"ef\") == 0\n\ndef test_count_substring_occurrences_with_case_insensitive():\n    assert count_substring_occurrences(\"HelloWorld\", \"oW\") == 0\n    assert count_substring_occurrences(\"HelloWorld\", \"oW\", case_sensitive=False) == 1",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}