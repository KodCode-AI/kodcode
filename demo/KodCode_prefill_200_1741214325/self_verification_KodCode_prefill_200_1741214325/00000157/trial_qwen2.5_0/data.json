{
  "metadata": {
    "prompt_id": "00000157",
    "row_id": 157,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to solve the following problem: Given a list of lists, return the sum of all numbers in the sublists that have an even number of elements.",
  "solution_code": "def sum_even_length_sublists(list_of_lists):\n    \"\"\"\n    Given a list of lists, returns the sum of all numbers in the sublists that have an even number of elements.\n\n    :param list_of_lists: A list containing sublists of integers.\n    :return: The sum of all numbers in the sublists that have an even number of elements.\n    \"\"\"\n    total_sum = 0\n    for sublist in list_of_lists:\n        if len(sublist) % 2 == 0:\n            total_sum += sum(sublist)\n    return total_sum",
  "test_code": "from solution import sum_even_length_sublists\n\ndef test_sum_even_length_sublists_even():\n    assert sum_even_length_sublists([[1, 2, 3, 4], [5, 6], [7, 8, 9], [10]]) == 30  # 1+2+3+4 + 7+8+9 = 30\n\ndef test_sum_even_length_sublists_odd_only():\n    assert sum_even_length_sublists([[1, 2, 3], [4, 5, 6]]) == 10  # 4+5+6 = 15\n\ndef test_sum_even_length_sublists_empty():\n    assert sum_even_length_sublists([[], [1, 2], [3, 4, 5, 6], [7, 8, 9, 10]]) == 30  # 1+2 + 7+8+9+10 = 30\n\ndef test_sum_even_length_sublists_all_odd():\n    assert sum_even_length_sublists([[1, 2], [3, 4, 5], [6]]) == 6  # 1+2 = 3\n\ndef test_sum_even_length_sublists_single_element():\n    assert sum_even_length_sublists([[1], [2, 3], [4, 5, 6], [7], []]) == 0  # No even-length sublists",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results0.jsonl"
}