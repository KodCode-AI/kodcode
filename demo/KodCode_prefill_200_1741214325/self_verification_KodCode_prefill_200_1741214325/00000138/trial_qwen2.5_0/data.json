{
  "metadata": {
    "prompt_id": "00000138",
    "row_id": 138,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to find the length of the longest continuous subarray with equal number of 0s and 1s.",
  "solution_code": "def findMaxLength(nums):\n    \"\"\"\n    Returns the length of the longest continuous subarray with an equal number of 0s and 1s.\n    \n    :param nums: List[int] - The input array of 0s and 1s.\n    :return: int - Length of the longest continuous subarray with equal number of 0s and 1s.\n    \"\"\"\n    count = 0\n    count_dict = {0: -1}  # Initialize the count with 0 at index -1\n    max_length = 0\n    \n    for i, num in enumerate(nums):\n        if num == 1:\n            count += 1\n        else:\n            count -= 1\n        \n        if count in count_dict:\n            max_length = max(max_length, i - count_dict[count])\n        else:\n            count_dict[count] = i\n    \n    return max_length",
  "test_code": "from solution import findMaxLength\n\ndef test_findMaxLength_empty_array():\n    assert findMaxLength([]) == 0\n\ndef test_findMaxLength_single_zero():\n    assert findMaxLength([0]) == 0\n\ndef test_findMaxLength_single_one():\n    assert findMaxLength([1]) == 0\n\ndef test_findMaxLength_equal_zeros_and_ones():\n    assert findMaxLength([0, 1]) == 2\n    assert findMaxLength([1, 0]) == 2\n\ndef test_findMaxLength_longest_subarray():\n    assert findMaxLength([0, 1, 0, 1, 0]) == 4\n\ndef test_findMaxLength_mixed_sequence():\n    assert findMaxLength([1, 0, 1, 1, 0, 0, 1]) == 7",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results0.jsonl"
}