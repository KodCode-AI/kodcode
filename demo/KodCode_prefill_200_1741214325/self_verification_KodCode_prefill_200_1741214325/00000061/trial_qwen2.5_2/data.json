{
  "metadata": {
    "prompt_id": "00000061",
    "row_id": 61,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to find the first occurrence of an element in an array that is not repeated (i.e., appears exactly once). If there is no such element, return -1.",
  "solution_code": "def find_non_repeated(arr):\n    \"\"\"\n    Returns the index of the first non-repeated element in the array.\n    If no such element exists, returns -1.\n    \"\"\"\n    from collections import Counter\n    counts = Counter(arr)\n    for idx, value in enumerate(arr):\n        if counts[value] == 1:\n            return idx\n    return -1",
  "test_code": "def test_find_non_repeated():\n    assert find_non_repeated([2, 3, 4, 3, 5]) == 0\n    assert find_non_repeated([1, 2, 2, 3, 4, 4, 5]) == 0\n    assert find_non_repeated([6, 7, 8, 8, 9, 9]) == 0\n    assert find_non_repeated([1, 1, 2, 2, 3, 3, 4, 5, 5]) == 7\n    assert find_non_repeated([1, 1, 2, 2]) == -1\n    assert find_non_repeated([7]) == 0\n    assert find_non_repeated([]) == -1\n\n# Edge cases\ndef test_find_non_repeated_edge_cases():\n    assert find_non_repeated([1, 1, 1, 2]) == 3\n    assert find_non_repeated([1, 2, 1, 3, 3, 4, 4]) == 1\n    assert find_non_repeated([1, 2, 2, 3]) == 0",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results2.jsonl"
}