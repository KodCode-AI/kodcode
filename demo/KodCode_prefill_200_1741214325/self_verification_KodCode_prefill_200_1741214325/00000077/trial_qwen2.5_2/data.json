{
  "metadata": {
    "prompt_id": "00000077",
    "row_id": 77,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to sort a 2D list by its sublists in increasing order based on the sum of the elements of each sublist.",
  "solution_code": "def sort_2d_list(our_list):\n    \"\"\"\n    Returns a new 2D list sorted by the increasing sum of elements in each sublist.\n    \"\"\"\n    return sorted(our_list, key=sum)",
  "test_code": "from solution import sort_2d_list\n\ndef test_sort_2d_list_with_negative_and_positive_integers():\n    input_list = [[3, 5, -2], [2, 5], [3, 1, -4]]\n    expected_output = [[2, 5], [3, 1, -4], [3, 5, -2]]\n    assert sort_2d_list(input_list) == expected_output\n\ndef test_sort_2d_list_with_all_positive_integers():\n    input_list = [[2, 3, 5], [5, 7], [1, 2]]\n    expected_output = [[1, 2], [2, 3, 5], [5, 7]]\n    assert sort_2d_list(input_list) == expected_output\n\ndef test_sort_2d_list_with_all_zeros():\n    input_list = [[], [0, 0, 0], [0]]\n    expected_output = [[], [0], [0, 0, 0]]\n    assert sort_2d_list(input_list) == expected_output\n\ndef test_sort_2d_list_with_single_element_lists():\n    input_list = [[3], [7], [1, 2]]\n    expected_output = [[3], [1, 2], [7]]\n    assert sort_2d_list(input_list) == expected_output\n\ndef test_sort_2d_list_with_empty_lists():\n    input_list = [[], [], []]\n    expected_output = [[], [], []]\n    assert sort_2d_list(input_list) == expected_output\n\ndef test_sort_2d_list_with_mixed_sublists():\n    input_list = [[2, -1], [3, -3, 2], [], [-3, -2]]\n    expected_output = [[], [-3, -2], [2, -1], [3, -3, 2]]\n    assert sort_2d_list(input_list) == expected_output",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results2.jsonl"
}