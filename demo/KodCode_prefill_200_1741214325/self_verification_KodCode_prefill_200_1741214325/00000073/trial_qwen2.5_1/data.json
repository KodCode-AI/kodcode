{
  "metadata": {
    "prompt_id": "00000073",
    "row_id": 73,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to perform a binary search on a sorted list of integers. The function should return the index of the target value if it is found, or -1 if it is not found. The list may not be empty.",
  "solution_code": "def binary_search(sorted_list, target):\n    \"\"\"\n    Performs a binary search on a sorted list to find the target value.\n    Returns the index of the target if found, otherwise returns -1.\n    \"\"\"\n    left, right = 0, len(sorted_list) - 1\n    \n    while left <= right:\n        mid = (left + right) // 2\n        if sorted_list[mid] < target:\n            left = mid + 1\n        elif sorted_list[mid] > target:\n            right = mid - 1\n        else:\n            return mid\n    return -1",
  "test_code": "from solution import binary_search\n\ndef test_binary_search_found():\n    assert binary_search([1, 2, 3, 4, 5], 3) == 2\n    assert binary_search([1, 2, 3, 4, 5], 4) == 3\n    assert binary_search([-5, -3, 0, 3, 7, 8, 9], 7) == 5\n    assert binary_search([10, 20, 30, 40, 50], 30) == 2\n\ndef test_binary_search_not_found():\n    assert binary_search([1, 2, 3, 4, 5], 6) == -1\n    assert binary_search([-5, -3, 0, 3, 7, 8, 9], 4) == -1\n    assert binary_search([1, 3, 5, 7], 2) == -1\n\ndef test_binary_search_empty_list():\n    assert binary_search([], 1) == -1",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}