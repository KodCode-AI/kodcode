{
  "metadata": {
    "prompt_id": "00000073",
    "row_id": 73,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to perform a binary search on a sorted list of integers. The function should return the index of the target value if it is found, or -1 if it is not found. The list may not be empty.",
  "solution_code": "def binary_search(arr, target):\n    \"\"\"\n    Performs a binary search on a sorted list of integers to find the index of the target value.\n    Returns the index of the target value if found, or -1 if the target is not present.\n    \"\"\"\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = left + (right - left) // 2\n        if arr[mid] == target:\n            return mid\n        elif arr[mid] < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1",
  "test_code": "def test_binary_search():\n    assert binary_search([1, 2, 3, 4, 5], 3) == 2\n    assert binary_search([1, 2, 3, 4, 5], 6) == -1\n    assert binary_search([1], 1) == 0\n    assert binary_search([1, 3, 5], 3) == 1\n    assert binary_search([1, 3, 5], 2) == -1\n    assert binary_search([1, 2, 3, 4, 5, 5, 6], 5) == 4  # Duplicate values in the list\n    assert binary_search([1, 2, 3, 4, 5], -1) == -1  # Target not in the list\n    assert binary_search([10, 20, 30, 40, 50], 30) == 2  # Middle element\n    assert binary_search([10, 20, 30, 40, 50], 25) == -1  # Element not found in the middle range",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results0.jsonl"
}