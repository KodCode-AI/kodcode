{
  "metadata": {
    "prompt_id": "00000106",
    "row_id": 106,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to perform insertion sort on a list of integers. Please make sure to provide detailed comments explaining each part of your code.",
  "solution_code": "def insertion_sort(arr):\n    \"\"\"\n    Sorts an array of integers using the insertion sort algorithm.\n    \n    This algorithm works by iterating over the elements, and for each element, \n    shifting the already sorted elements to the right to make space for the \n    new element and inserting the element in the correct position.\n    \n    Parameters:\n    - arr: List[int], the list of integers to be sorted.\n    \n    Returns:\n    - List[int], the sorted list.\n    \"\"\"\n    # Loop through 1 to len(arr)\n    for i in range(1, len(arr)):\n        key = arr[i]\n        j = i - 1\n        # Move elements of arr[0..i-1], that are greater than key, \n        # to one position ahead of their current position\n        while j >= 0 and key < arr[j]:\n            arr[j + 1] = arr[j]\n            j -= 1\n        arr[j + 1] = key\n    return arr",
  "test_code": "import pytest\n\ndef test_insertion_sort_empty_list():\n    assert insertion_sort([]) == []\n\ndef test_insertion_sort_sorted_list():\n    assert insertion_sort([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n\ndef test_insertion_sort_reverse_sorted_list():\n    assert insertion_sort([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5]\n\ndef test_insertion_sort_with_duplicates():\n    assert insertion_sort([4, 3, 2, 5, 3, 5]) == [2, 3, 3, 4, 5, 5]\n\ndef test_insertion_sort_random_list():\n    assert insertion_sort([3, 6, 1, 8, 4]) == [1, 3, 4, 6, 8]\n\ndef test_insertion_sort_negative_numbers():\n    assert insertion_sort([-5, -2, -3, -1]) == [-5, -3, -2, -1]",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}