{
  "metadata": {
    "prompt_id": "00000055",
    "row_id": 55,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to identify if two string s1 and s2 are isomorphic. Two strings are isomorphic if the characters in s1 can be replaced to get s2. All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.",
  "solution_code": "def is_isomorphic(s1, s2):\n    \"\"\"\n    Returns True if s1 and s2 are isomorphic, otherwise False.\n    \"\"\"\n    if len(s1) != len(s2):\n        return False\n    \n    mapping_s1_to_s2 = {}\n    mapping_s2_to_s1 = {}\n    \n    for char_s1, char_s2 in zip(s1, s2):\n        if char_s1 in mapping_s1_to_s2:\n            if mapping_s1_to_s2[char_s1] != char_s2:\n                return False\n        else:\n            mapping_s1_to_s2[char_s1] = char_s2\n        \n        if char_s2 in mapping_s2_to_s1:\n            if mapping_s2_to_s1[char_s2] != char_s1:\n                return False\n        else:\n            mapping_s2_to_s1[char_s2] = char_s1\n    \n    return True",
  "test_code": "from solution import is_isomorphic\n\ndef test_isomorphic_strings():\n    assert is_isomorphic(\"egg\", \"add\") == True\n    assert is_isomorphic(\"foo\", \"bar\") == False\n    assert is_isomorphic(\"paper\", \"title\") == True\n    assert is_isomorphic(\"badc\", \"baba\") == False\n    assert is_isomorphic(\"abab\", \"baba\") == False\n    assert is_isomorphic(\"ab\", \"aa\") == False\n    assert is_isomorphic(\"a\", \"b\") == True\n    assert is_isomorphic(\"aa\", \"bb\") == True\n    assert is_isomorphic(\"paper\", \"exas\") == False",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results0.jsonl"
}