{
  "metadata": {
    "prompt_id": "00000174",
    "row_id": 174,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to find the longest continuous substring that can be formed with at most two distinct characters in a given string. For example, for the input string \"aabacbebebe\", the function should return 7, as the longest substring that can be formed with at most two distinct characters is \"cbebebe\".",
  "solution_code": "def longest_substring_with_two_distinct_chars(s: str) -> int:\n    \"\"\"\n    Finds the longest substring of the given string `s` that contains at most two distinct characters.\n    \"\"\"\n    if not s:\n        return 0\n\n    max_length = 1\n    start = 0\n    char_map = {}\n    max_length_char = s[0]\n\n    for end in range(len(s)):\n        char_map[s[end]] = char_map.get(s[end], 0) + 1\n\n        while len(char_map) > 2:\n            char_map[s[start]] -= 1\n            if char_map[s[start]] == 0:\n                del char_map[s[start]]\n            start += 1\n\n        if end - start + 1 > max_length:\n            max_length = end - start + 1\n            max_length_char = s[start:end+1]\n\n    return max_length",
  "test_code": "from solution import longest_substring_with_two_distinct_chars\n\ndef test_longest_substring_with_two_distinct_chars():\n    assert longest_substring_with_two_distinct_chars(\"aabacbebebe\") == 7\n    assert longest_substring_with_two_distinct_chars(\"ccaabbb\") == 5\n    assert longest_substring_with_two_distinct_chars(\"abcabc\") == 3\n    assert longest_substring_with_two_distinct_chars(\"a\") == 1\n    assert longest_substring_with_two_distinct_chars(\"\") == 0\n    assert longest_substring_with_two_distinct_chars(\"bbbbbb\") == 6\n    assert longest_substring_with_two_distinct_chars(\"abaccc\") == 5\n\n# Testing edge cases\ndef test_longest_substring_with_two_distinct_chars_edge_cases():\n    assert longest_substring_with_two_distinct_chars(\"a\") == 1\n    assert longest_substring_with_two_distinct_chars(\"\") == 0\n    assert longest_substring_with_two_distinct_chars(\"ab\") == 2\n    assert longest_substring_with_two_distinct_chars(\"aab\") == 3\n    assert longest_substring_with_two_distinct_chars(\"aabb\") == 4\n    assert longest_substring_with_two_distinct_chars(\"aabbcc\") == 5\n    assert longest_substring_with_two_distinct_chars(\"aabbcccc\") == 6\n\n# Testing strings with more than two distinct characters\ndef test_longest_substring_with_two_distinct_chars_more_than_two():\n    assert longest_substring_with_two_distinct_chars(\"aabbccdde\") == 6\n    assert longest_substring_with_two_distinct_chars(\"abcdeff\") == 5\n    assert longest_substring_with_two_distinct_chars(\"abccdddddef\") == 6\n    assert longest_substring_with_two_distinct_chars(\"abcde\") == 2",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}