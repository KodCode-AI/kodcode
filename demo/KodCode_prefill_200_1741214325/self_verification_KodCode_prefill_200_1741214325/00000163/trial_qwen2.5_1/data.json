{
  "metadata": {
    "prompt_id": "00000163",
    "row_id": 163,
    "seed_ids": [
      0
    ],
    "mode": "prefill"
  },
  "instruction": "Write a python function to extract all the shortest words from a string of text.",
  "solution_code": "import re\nfrom collections import defaultdict\n\ndef extract_shortest_words(text):\n    \"\"\"\n    Returns a dictionary of all the shortest words in the text, mapping them to their lengths.\n    \"\"\"\n    # Split the text into words using regular expression to handle punctuation\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n    if not words:\n        return {}\n\n    min_length = min(len(word) for word in words)\n    shortest_words = {word: min_length for word in words if len(word) == min_length}\n    return shortest_words",
  "test_code": "from solution import extract_shortest_words\n\ndef test_extract_shortest_words_single_word():\n    assert extract_shortest_words(\"banana\") == {'b': 1, 'a': 1, 'n': 1}\n\ndef test_extract_shortest_words_multiple_words():\n    assert extract_shortest_words(\"The quick brown fox\") == {'t': 1, 'h': 1, 'e': 1, 'q': 1, 'u': 1, 'k': 1, 'b': 1, 'r': 1, 'w': 1, 'o': 1, 'n': 1, 'f': 1, 'x': 1}\n\ndef test_extract_shortest_words_with_punctuation():\n    assert extract_shortest_words(\"A quick, brown; fox!\") == {'a': 1, 'q': 1, 'u': 1, 'k': 1, 'i': 1, 'c': 1, 'b': 1, 'r': 1, 'w': 1, 'o': 1, 'n': 1, 'f': 1, 'x': 1}\n\ndef test_extract_shortest_words_empty_string():\n    assert extract_shortest_words(\"\") == {}\n\ndef test_extract_shortest_words_single_word_tuple():\n    assert extract_shortest_words(\"Heavy\") == {'h': 1, 'e': 1, 'a': 1, 'v': 1, 'y': 1}\n\ndef test_extract_shortest_words_full_sentence():\n    assert extract_shortest_words(\"To be, or not to be, that is the question.\") == {'t': 1, 'o': 1, 'b': 1, 'e': 1, 'n': 1, 't': 1, 'q': 1, 'i': 1, 's': 1, 't': 1, 'h': 1, 't': 1, 'a': 1, 't': 1, 's': 1}",
  "file_source": "KodCode_prefill_200_1741214325_sanitized_prepared_results1.jsonl"
}