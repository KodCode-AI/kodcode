{
  "style": "instruct",
  "subset": "Prefill",
  "question_id": "Prefill_00000017_I",
  "question": "Write a python function to convert a Celsius temperature to Fahrenheit.",
  "solution": "def celsius_to_fahrenheit(celsius):\n    \"\"\"\n    Converts a temperature from Celsius to Fahrenheit.\n    \n    Parameters:\n    celsius (float): Temperature in Celsius.\n    \n    Returns:\n    float: Temperature in Fahrenheit.\n    \"\"\"\n    return (celsius * 9/5) + 32",
  "test_code": "from solution import celsius_to_fahrenheit\n\ndef test_celsius_to_fahrenheit_freezing_point():\n    assert celsius_to_fahrenheit(0) == 32.0\n\ndef test_celsius_to_fahrenheit_boiling_point():\n    assert celsius_to_fahrenheit(100) == 212.0\n\ndef test_celsius_to_fahrenheit_room_temperature():\n    assert celsius_to_fahrenheit(25) == 77.0\n\ndef test_celsius_to_fahrenheit_negative_temperature():\n    assert celsius_to_fahrenheit(-40) == -40.0\n\ndef test_celsius_to_fahrenheit_freezing_point_reverse():\n    assert round(celsius_to_fahrenheit(0) - 32, 1) == 0  # Using round to allow for floating point precision issues",
  "test_info": [
    {
      "function_name": "celsius_to_fahrenheit",
      "parameter_list": "(celsius)",
      "function_declaration": "def celsius_to_fahrenheit(celsius):",
      "docstring": "Converts a temperature from Celsius to Fahrenheit.\n\nParameters:\ncelsius (float): Temperature in Celsius.\n\nReturns:\nfloat: Temperature in Fahrenheit."
    }
  ],
  "gpt_pass_sequence": [
    1,
    1,
    1
  ],
  "gpt_pass_trial_num": 3,
  "gpt_difficulty": "easy",
  "gpt_pass_percentage": 1.0,
  "r1_response": "<think>\nOkay, I need to write a Python function to convert Celsius to Fahrenheit. Hmm, I remember the formula is F = (C *  Ninth) + 32 or something like that. Let me think, yes, it's (C multiplied by 9/5) and then add 32. So the function should take a Celsius value as input and return the Fahrenheit equivalent.\n\nI'll start by defining a function called celsius_to_fahrenheit. The parameter will be celsius. Inside the function, I'll calculate using the formula and return the result. Oh, and I should round the result, maybe to two decimal places for clarity.\n\nWait, maybe the user doesn't want rounding. But it's better to make the output neat. I'll include rounding to two decimal places. So the calculation would be something like f = (c * 9/5) + 32, then rounded.\n\nI should also include a docstring to explain what the function does, its parameter, and what it returns. That makes it more understandable for anyone reading the code.\n\nTesting the function with some example values might help. For instance, freezing point of water is 0\u00b0C, which is 32\u00b0F. Boiling point is 100\u00b0C, which is 212\u00b0F. Let me check with these values. So if I pass 0 to the function, it should return 32, and 100 should return 212. Also, maybe 20\u00b0C should be 68\u00b0F. Let me see: (20*9/5)=36 +32=68, yes.\n\nI think that's all. I'll write the function, make sure it's simple and clear, and test it with these examples to ensure it works correctly.\n</think>\n\nTo convert a temperature from Celsius to Fahrenheit, use the formula:\n\n```python\ndef celsius_to_fahrenheit(celsius):\n    return round(celsius * 9/5 + 32, 2)\n```\n\n### Explanation\nThe function `celsius_to_fahrenheit` takes a temperature in Celsius as input, applies the conversion formula `(\u00b0C \u00d7 9/5) + 32`, and returns the result rounded to two decimal places.\n\n### Example usage\n```python\nprint(celsius_to_fahrenheit(0))  # Output: 32\nprint(celsius_to_fahrenheit(100))  # Output: 212\nprint(celsius_to_fahrenheit(20))  # Output: 68\n```",
  "r1_solution": "def celsius_to_fahrenheit(celsius):\n    return round(celsius * 9/5 + 32, 2)",
  "metadata": {
    "prompt_id": "00000017",
    "row_id": 17,
    "seed_ids": [
      0
    ],
    "mode": "prefill",
    "original_instruction": ""
  },
  "file_source": "KodCode_prefill_200_1741214325_prepared_results0.jsonl"
}