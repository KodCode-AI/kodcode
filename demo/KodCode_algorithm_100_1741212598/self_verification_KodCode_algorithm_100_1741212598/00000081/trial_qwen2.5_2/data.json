{
  "metadata": {
    "prompt_id": "00000081",
    "row_id": 81,
    "seed_ids": [
      611
    ],
    "mode": "algorithm"
  },
  "instruction": "Given the following code for checking and counting right triangles on a grid from the origin, you are to optimize the solution to compute the number of right triangles more efficiently.\n\n#### Function Description\n\nYou need to implement a function `optimized_solution` that returns the number of right triangles \\( \\Delta OPQ \\) that can be formed by points \\( P(x1, y1) \\) and \\( Q(x2, y2) \\) with coordinates between 0 and a given limit `limit` inclusive.\n\n#### Constraints\n\n- \\(0 \\leq x1, y1, x2, y2 \\leq \\text{limit}\\)\n- \\(0 \\leq \\text{limit} \\leq 50\\)\n\n#### Example\n\n```python\ndef optimized_solution(limit: int) -> int:\n    # Your implementation goes here\n```\n\n#### Expected Output\n\nThe function should return the number of right triangles that can be formed.\n\n#### Performance Requirements\n\nOptimize the solution to handle the maximum limit of 50 efficiently.",
  "solution_code": "def optimized_solution(limit: int) -> int:\n    \"\"\"\n    Returns the number of right triangles that can be formed on a grid\n    from the origin with coordinates between 0 and limit inclusive.\n    \"\"\"\n    count = 0\n    # Iterate over all possible x1, y1, x2, y2 within the given limit\n    for x1 in range(limit + 1):\n        for y1 in range(limit + 1):\n            for x2 in range(limit + 1):\n                for y2 in range(limit + 1):\n                    if (x1, y1) != (x2, y2) and (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) == (x1 * x1 + y1 * y1):\n                        count += 1\n    return count",
  "test_code": "``\nimport pytest\n\ndef test_optimized_solution():\n    assert optimized_solution(1) == 4\n    assert optimized_solution(2) == 24\n    assert optimized_solution(3) == 64\n    assert optimized_solution(4) == 164\n\nif __name__ == \"__main__\":\n    pytest.main()",
  "file_source": "KodCode_questions2sv_algorithm_100_1741212598_sanitized_prepared_results2.jsonl"
}