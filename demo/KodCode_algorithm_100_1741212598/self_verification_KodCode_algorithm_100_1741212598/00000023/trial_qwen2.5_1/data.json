{
  "metadata": {
    "prompt_id": "00000023",
    "row_id": 23,
    "seed_ids": [
      529
    ],
    "mode": "algorithm"
  },
  "instruction": "**Problem Statement**:\nWrite a Python function `count_letters` that converts numbers from 1 to 1000 into their English word representations and counts the total number of letters used, excluding spaces and hyphens. The function should be able to handle numbers up to 1000 and return the total count of letters.\n\n**Function Signature**:\n```python\ndef count_letters(n: int) -> int:\n    pass\n```\n\n**Input**:\n- `n` (1 <= n <= 1000): An integer representing the number to be converted and counted.\n\n**Output**:\n- An integer representing the total number of letters used when the number is written in words.\n\n**Constraints**:\n- The function must handle all numbers from 1 to 1000 inclusively.\n- Do not count spaces or hyphens when counting letters.\n\n**Example**:\n```python\nassert count_letters(100) == 11\nassert count_letters(342) == 23\nassert count_letters(115) == 20\nassert count_letters(1000) == 21124\n```\n\n**Note**:\n- Your solution should be efficient and handle all edge cases as described in the provided snippet.\n\n**Performance Requirement**:\n- The function should be able to process the input within a reasonable time, considering the constraints.",
  "solution_code": "def count_letters(n: int) -> int:\n    \"\"\"\n    Returns the count of letters used when the number from 1 to 1000 is written in words.\n    \"\"\"\n    if not 1 <= n <= 1000:\n        raise ValueError(\"Input must be between 1 and 1000\")\n\n    units = [\"\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    teens = [\"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"]\n    tens = [\"\", \"\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"]\n    thousands = [\"\", \"thousand\"]\n\n    def count(n):\n        if n == 0:\n            return \"\"\n        elif n < 10:\n            return units[n]\n        elif n < 20:\n            return teens[n - 10]\n        elif n < 100:\n            return tens[n // 10] + (\"\" if n % 10 == 0 else \"-\" + units[n % 10])\n        elif n < 1000:\n            return units[n // 100] + \" hundred\" + (\"\" if n % 100 == 0 else \" and\" + count(n % 100))\n        else:\n            return thousands[1] + count(n // 1000) + \" thousand\" + (\"\" if n % 1000 == 0 else \" and\" + count(n % 1000))\n\n    result = count(n)\n    return len(result.replace(\" \", \"\").replace(\"-\", \"\"))",
  "test_code": "import pytest\n\ndef test_count_letters():\n    assert count_letters(3) == 3\n    assert count_letters(11) == 6\n    assert count_letters(100) == 11\n    assert count_letters(342) == 23\n    assert count_letters(115) == 20\n    assert count_letters(1000) == 21124\n    assert count_letters(999) == 21052\n    with pytest.raises(ValueError):\n        count_letters(1001)\n    with pytest.raises(ValueError):\n        count_letters(0)",
  "file_source": "KodCode_questions2sv_algorithm_100_1741212598_sanitized_prepared_results1.jsonl"
}